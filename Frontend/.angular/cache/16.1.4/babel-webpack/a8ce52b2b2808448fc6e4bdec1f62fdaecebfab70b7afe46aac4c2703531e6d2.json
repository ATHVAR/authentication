{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthserviceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000'; // Replace this with your server's URL\n  }\n\n  loginuser(user) {\n    return this.http.post(`${this.apiUrl}/login`, user);\n  }\n}\nAuthserviceService.ɵfac = function AuthserviceService_Factory(t) {\n  return new (t || AuthserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthserviceService,\n  factory: AuthserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthserviceService","constructor","http","apiUrl","loginuser","user","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ATHIRA\\Desktop\\New folder (2)\\Main_project-master (1)\\Main_project-master\\Frontend\\src\\app\\shared\\authservice.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import{HttpClient} from '@angular/common/http'\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthserviceService {\n//   [x: string]: any;\n//   constructor(private http:HttpClient) { }\n\n//   loginuser(user:any){\n//     return this.http.post<any>(\"http://localhost:3000/api/authlogin\",user);\n//   }\n//   isLoginTrue(){\n//     return localStorage.getItem('token');\n//   }\n// }\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthserviceService {\n  private apiUrl = 'http://localhost:3000'; // Replace this with your server's URL\n\n  constructor(private http: HttpClient) { }\n\n  loginuser(user: any) {\n    return this.http.post<any>(`${this.apiUrl}/login`, user);\n  }\n\n  \n\n"],"mappings":";;AAwBA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEF;;EAExCC,SAASA,CAACC,IAAS;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,GAAG,IAAI,CAACH,MAAM,QAAQ,EAAEE,IAAI,CAAC;EAC1D;;AAPWL,kBAAkB,C;mBAAlBA,kBAAkB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAlBV,kBAAkB,C;SAAlBA,kBAAkB;EAAAW,OAAA,EAAlBX,kBAAkB,CAAAY,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
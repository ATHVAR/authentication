{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./authservice.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthguardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    const token = this.authService.getToken();\n    if (token) {\n      // User is authenticated, allow access to the route\n      return true;\n    } else {\n      // User is not authenticated, redirect to login page\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthguardService.ɵfac = function AuthguardService_Factory(t) {\n  return new (t || AuthguardService)(i0.ɵɵinject(i1.AuthserviceService), i0.ɵɵinject(i2.Router));\n};\nAuthguardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthguardService,\n  factory: AuthguardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthguardService","constructor","authService","router","canActivate","token","getToken","navigate","i0","ɵɵinject","i1","AuthserviceService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ATHIRA\\Desktop\\New folder (2)\\Main_project-master (1)\\Main_project-master\\Frontend\\src\\app\\shared\\authguard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthserviceService } from './authservice.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService {\n\n  constructor(private authService:AuthserviceService,private router: Router) { }\n\ncanActivate(): boolean {\n    const token = this.authService.getToken();\n    if (token) {\n      // User is authenticated, allow access to the route\n      return true;\n    } else {\n      // User is not authenticated, redirect to login page\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n"],"mappings":";;;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,WAA8B,EAASC,MAAc;IAArD,KAAAD,WAAW,GAAXA,WAAW;IAA4B,KAAAC,MAAM,GAANA,MAAM;EAAY;EAE/EC,WAAWA,CAAA;IACP,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACzC,IAAID,KAAK,EAAE;MACT;MACA,OAAO,IAAI;KACZ,MAAM;MACL;MACA,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAdWP,gBAAgB,C;mBAAhBA,gBAAgB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAhBb,gBAAgB,C;SAAhBA,gBAAgB;EAAAc,OAAA,EAAhBd,gBAAgB,CAAAe,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\ATHIRA\\Desktop\\New folder (2)\\Main_project-master (1)\\Main_project-master\\Frontend\\src\\app\\components\\sidenav\\home.component.ts"],"sourcesContent":["import { Component, OnInit , ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport{auth}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit{\n\n  \n\n  isSidebarActive = false; // Add this property to control sidebar visibility\n  @ViewChild('sidebar')\n  sidebar!: ElementRef;\n  dropdownStates: { [key: string]: boolean } = {}\n\n  collapsed = false;\n  isHomeActive:boolean=false;\n  isAddUserActive: boolean = false;\n  isViewUserActive :boolean = false;\n  isAddStudentActive : boolean = false;\n  isEditStudentActive : boolean = false;\n  isCsvActive : boolean = false;\n  isAddNotification:boolean=false;\n  \n\n  constructor(private router:Router, private renderer: Renderer2){}\n\n  ngOnInit(): void {\n    \n  }\n\n  toggleCollapse(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  logout(){\n    // after implementing tokenization\n    // localStorage.removeItem('token');\n    this.router.navigate(['']);\n  }\n\n  toggleSidebar(): void {\n    this.isSidebarActive = !this.isSidebarActive; // Toggle the sidebar visibility\n    if (this.isSidebarActive) {\n      this.renderer.addClass(this.sidebar.nativeElement, 'active');\n    } else {\n      this.renderer.removeClass(this.sidebar.nativeElement, 'active');\n    }\n    // if (this.isSidebarActive) {\n    //   this.isAddUserActive = true; // Hide AddUser when sidebar is toggled\n    // }\n\n  }\n\n  loadAddUser(): void {\n    this.isHomeActive =false;\n    this.isAddUserActive = true;\n    this.isSidebarActive = true; // Close sidebar when AddUser is loaded\n    this.isViewUserActive=false;\n    this.isAddStudentActive=false;\n    this.isEditStudentActive = false;\n    this.isCsvActive  = false;\n    this.isAddNotification=false;\n  }\n  \n  loadViewUser(): void {\n    this.isViewUserActive=true;\n    this.isSidebarActive=true;\n    this.isAddUserActive=false;\n    this.isAddStudentActive=false;\n    this.isEditStudentActive=false;\n    this.isCsvActive  = false;\n    this.isHomeActive =false;\n    this.isAddNotification=false;\n  }\n\n  loadAddStudent(): void {\n    this.isAddStudentActive=true;\n    this.isSidebarActive=true;\n    this.isAddUserActive=false;\n    this.isViewUserActive=false;\n    this.isEditStudentActive=false;\n    this.isCsvActive = false;\n    this.isHomeActive =false;\n    this.isAddNotification=false;\n    \n  }\n\n  loadEditStudent(): void {\n    this.isEditStudentActive=true;\n    this.isSidebarActive= true;\n    this.isAddStudentActive=false;\n    this.isAddUserActive=false;\n    this.isViewUserActive=false;\n    this.isCsvActive=false;\n    this.isHomeActive =false;\n    this.isAddNotification=false;\n  }\n\n  loadCsv() : void {\n    this.isCsvActive=true;\n    this.isSidebarActive=true;\n    this.isAddStudentActive=false;\n    this.isAddUserActive=false;\n    this.isEditStudentActive=false;\n    this.isViewUserActive=false;\n    this.isHomeActive =false;\n    this.isAddNotification=false;\n  }\n\n  loadHomeComp():void{\n    this.isAddNotification=false;\n    this.isHomeActive =true;\n    this.isAddUserActive = false;\n    this.isSidebarActive = false;\n    this.isViewUserActive=false;\n    this.isAddStudentActive=false;\n    this.isEditStudentActive = false;\n    this.isCsvActive  = false;\n  }\n\n  loadNotication():void{\n    this.isAddNotification=true;\n    this.isHomeActive =false;\n    this.isAddUserActive = false;\n    this.isSidebarActive = true;\n    this.isViewUserActive=false;\n    this.isAddStudentActive=false;\n    this.isEditStudentActive = false;\n    this.isCsvActive  = false;\n  }\n\n  toggleDropdown(submenuId: string): void {\n    const submenu = document.getElementById(submenuId);\n    if (submenu) {\n      submenu.classList.toggle('show');\n    }\n  }\n\n}"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}